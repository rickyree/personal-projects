# -*- coding: utf-8 -*-
"""redditscraper_notifier.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WaBMilCNgpWu1PGkVsIkuTBfrcawJj2z
"""

import lxml 
from bs4 import BeautifulSoup 
import requests 

#function that continually makes requests to reddit.com until data is obtained (because sometimes the scraping request returns blank values)
def scrape(url): 
  success = False 
  while success == False: 
    hi = requests.get(url) 
    data = hi.text 
    soup = BeautifulSoup(data, 'lxml')
    item = soup.select('._1poyrkZ7g36PawDueRza-J') 

    if not not item:  
      success = True 

  #uses css class selectors to extract relevant data (title, content of post)
  post = item[0].select('._eYtD2XCVieq6emjKBH3m')
  content = item[0].select('._292iotee39Lmt0MkQZ2hPV') 
  return post, content 


print('Loading data...') 

#scrape for the newest post at the start
post_old, content_old = scrape('https://www.reddit.com/r/minecraft/new/')
print('Current newest post is: ', post_old[0].text) 

post_new = post_old 


#keep searching for new posts, stop if the newest post is different to the one at the start 
count = 0 
print('Waiting for new posts... ') 
while post_new == post_old: 
  if count == 5: 
    print('Waiting for new posts... ') 
    count = 0 

  post_new, content_new = scrape('https://www.reddit.com/r/minecraft/new/')
  count = count + 1 


#output the new post 
if not not content_new: 
  print('\nNew post! \n\nTitle: \n', post_new[0].text, '\nContent: \n', content_new[0].text, '\nTo read more, visit https://www.reddit.com/r/minecraft/new/') 

else: 
  if not content_new: 
    print('\nNew post! \n\nTitle: \n', post_new[0].text, '\nNo written content is included in this post...\nTo view image, visit https://www.reddit.com/r/minecraft/new/')
